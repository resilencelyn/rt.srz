//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.atl.model.atl;

namespace rt.atl.business.manager
{
    public partial interface IPoliManager : IManagerBase<rt.atl.model.atl.Poli, int>
    {
		// Get Methods
		IList<Poli> GetByPID(System.Int32 person);
		IList<Poli> GetByDEDIT(System.DateTime dedit);
		IList<Poli> GetByDSTOP(System.DateTime dstop);
		IList<Poli> GetByNPOL(System.String npol);
		IList<Poli> GetByPOLTP(System.Int32 poltp);
		IList<Poli> GetByPOLVID(System.Int32 polvid);
		IList<Poli> GetByQ(System.String q);
		IList<Poli> GetBySPOL(System.String spol);
		IList<Poli> GetByST(System.Int32 st);
    }

    partial class PoliManager : ManagerBase<rt.atl.model.atl.Poli, int>, IPoliManager
    {
        #region Get Methods

		
		public IList<Poli> GetByPID(System.Int32 person)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			ICriteria personCriteria = criteria.CreateCriteria("Person");
            personCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", person));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByDEDIT(System.DateTime dedit)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Dedit", dedit));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByDSTOP(System.DateTime dstop)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Dstop", dstop));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByNPOL(System.String npol)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Npol", npol));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByPOLTP(System.Int32 poltp)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Poltp", poltp));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByPOLVID(System.Int32 polvid)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Polvid", polvid));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByQ(System.String q)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Q", q));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetBySPOL(System.String spol)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Spol", spol));
			
			return criteria.List<Poli>();
        }
		
		public IList<Poli> GetByST(System.Int32 st)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Poli));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("St", st));
			
			return criteria.List<Poli>();
        }
		
		#endregion
    }
}