<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="StructureMap" type="StructureMap.Configuration.StructureMapConfigurationSection,StructureMap" />
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="PoolNhibernateSection" type="rt.core.model.configuration.PoolNhibernateSection, rt.core.model" />
  </configSections>
  <connectionStrings>
    <add name="default" connectionString="Data Source=syurov; Initial Catalog=rt_srz_demo;User ID=pvp;Password=elianora" providerName="" />
  </connectionStrings>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="command_timeout">300</property>
      <mapping assembly="rt.srz.business" />
      <mapping assembly="rt.core.business" />
    </session-factory>
  </hibernate-configuration>
  <StructureMap>
    <!--Регистрация бизнеслогики-->
    <Registry Type="rt.core.business.registry.CoreRegistry, rt.core.business" />
    <Registry Type="rt.core.business.registry.NHibernateRegistry, rt.core.business" />
    <Registry Type="rt.core.business.registry.QuartzRegistry, rt.core.business" />
    <Registry Type="rt.srz.business.registry.RepositoryRegistry, rt.srz.business" />
    <Registry Type="rt.atl.business.registry.RepositoryRegistry, rt.atl.business" />
    <!--Внутренняя регистрация сервисов-->
    <Registry Type="rt.srz.services.client.registry.ServicesRegistry, rt.srz.services.client" />
  </StructureMap>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="asyncConsole" xsi:type="AutoFlushWrapper">
        <target xsi:type="ColoredConsole" name="console" layout="${logger}: ${message}${exception:format=ToString,StackTrace}">
        </target>
      </target>
      <target name="asyncFile" xsi:type="AutoFlushWrapper">
        <target name="file" xsi:type="File" fileName="log/console.${level}.log" layout="${longdate}: ${logger}: ${message}${exception:format=ToString,StackTrace}" archiveFileName="${basedir}/log/archives/${shortdate}.console.{#####}.${level}.log" archiveAboveSize="2097152" archiveNumbering="Sequence" maxArchiveFiles="10000000" concurrentWrites="true" keepFileOpen="false" />
      </target>
    </targets>
    <rules>
      <logger name="*" minlevel="Info" writeTo="asyncConsole" />
      <logger name="*" minlevel="Info" writeTo="asyncFile" />
    </rules>
  </nlog>
  <PoolNhibernateSection>
    <FileNameConfigaration>
    </FileNameConfigaration>
  </PoolNhibernateSection>

  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="longMessageBindings" closeTimeout="01:00:00" openTimeout="01:00:00" receiveTimeout="01:00:00" sendTimeout="01:00:00" maxReceivedMessageSize="1073741824" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint name="AuthGate" address="http://localhost:9000/AuthGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" contract="rt.core.model.security.IAuthService" />
      <endpoint name="SecurityGate" address="http://localhost:9000/SecurityGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.core.model.interfaces.ISecurityService" />

      <endpoint name="AtlGate" address="http://localhost:9000/AtlGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.atl.model.interfaces.service.IAtlService" />

      <endpoint name="KladrGate" address="http://localhost:9000/KladrGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.IKladrService" />
      <endpoint name="NsiGate" address="http://localhost:9000/NsiGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.INsiService" />
      <endpoint name="SmoGate" address="http://localhost:9000/SmoGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.ISmoService" />
      <endpoint name="StatementGate" address="http://localhost:9000/StatementGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.IStatementService" />
      <endpoint name="TfomsGate" address="http://localhost:9000/TfomsGate.svc/" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.ITfomsService" />
    </client>
    <behaviors>
      <endpointBehaviors>
        <behavior name="protoEndpointBehavior">
          <!--<protobuf />-->
          <ChallengeClientMessageInspector />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="protobuf" type="ProtoBuf.ServiceModel.ProtoBehaviorExtension, protobuf-net, Version=2.0.0.668, Culture=neutral, PublicKeyToken=257b51d87d2e4d67" />
        <add name="ChallengeClientMessageInspector" type="rt.core.model.client.TokenMessageInspector, rt.core.model.client, Culture=neutral" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

</configuration>