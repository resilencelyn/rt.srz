//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface IInsuredPersonDatumManager : IManagerBase<rt.srz.model.srz.InsuredPersonDatum, System.Guid>
    {
		// Get Methods
		IList<InsuredPersonDatum> GetByCitizenshipId(System.Int32 concept1);
		IList<InsuredPersonDatum> GetByGenderId(System.Int32 concept2);
		IList<InsuredPersonDatum> GetByCategoryId(System.Int32 concept3);
		IList<InsuredPersonDatum> GetByOldCountryId(System.Int32 concept4);
		IList<InsuredPersonDatum> GetByBirthday(System.DateTime birthday);
		IList<InsuredPersonDatum> GetByFirstName(System.String firstName);
		IList<InsuredPersonDatum> GetByLastName(System.String lastName);
		IList<InsuredPersonDatum> GetByMiddleName(System.String middleName);
		IList<InsuredPersonDatum> GetBySnils(System.String snils);
		IList<InsuredPersonDatum> GetByIsBadSnils(System.Boolean isBadSnils);
    }

    partial class InsuredPersonDatumManager : ManagerBase<rt.srz.model.srz.InsuredPersonDatum, System.Guid>, IInsuredPersonDatumManager
    {
        #region Get Methods

		
		public IList<InsuredPersonDatum> GetByCitizenshipId(System.Int32 concept1)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			ICriteria concept1Criteria = criteria.CreateCriteria("Concept1");
            concept1Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept1));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByGenderId(System.Int32 concept2)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			ICriteria concept2Criteria = criteria.CreateCriteria("Concept2");
            concept2Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept2));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByCategoryId(System.Int32 concept3)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			ICriteria concept3Criteria = criteria.CreateCriteria("Concept3");
            concept3Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept3));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByOldCountryId(System.Int32 concept4)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			ICriteria concept4Criteria = criteria.CreateCriteria("Concept4");
            concept4Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept4));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByBirthday(System.DateTime birthday)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Birthday", birthday));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByFirstName(System.String firstName)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("FirstName", firstName));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByLastName(System.String lastName)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("LastName", lastName));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByMiddleName(System.String middleName)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("MiddleName", middleName));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetBySnils(System.String snils)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Snils", snils));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		public IList<InsuredPersonDatum> GetByIsBadSnils(System.Boolean isBadSnils)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(InsuredPersonDatum));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("IsBadSnils", isBadSnils));
			
			return criteria.List<InsuredPersonDatum>();
        }
		
		#endregion
    }
}