//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface IMedicalInsuranceManager : IManagerBase<rt.srz.model.srz.MedicalInsurance, System.Guid>
    {
		// Get Methods
		IList<MedicalInsurance> GetByInsuredPersonId(System.Guid insuredPerson);
		IList<MedicalInsurance> GetByPolisTypeId(System.Int32 concept);
		IList<MedicalInsurance> GetBySmoId(System.Guid organisation);
		IList<MedicalInsurance> GetByStatementId(System.Guid statement);
		IList<MedicalInsurance> GetByIsActive(System.Boolean isActive);
		IList<MedicalInsurance> GetByDateTo(System.DateTime dateTo);
		IList<MedicalInsurance> GetByDateFrom(System.DateTime dateFrom);
		IList<MedicalInsurance> GetByEnp(System.String enp);
		IList<MedicalInsurance> GetByPolisNumber(System.String polisNumber);
		IList<MedicalInsurance> GetByPolisSeriaPolisNumber(System.String polisSeria, System.String polisNumber);
    
    }

    partial class MedicalInsuranceManager : ManagerBase<rt.srz.model.srz.MedicalInsurance, System.Guid>, IMedicalInsuranceManager
    {
        #region Get Methods

		
		public IList<MedicalInsurance> GetByInsuredPersonId(System.Guid insuredPerson)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			ICriteria insuredPersonCriteria = criteria.CreateCriteria("InsuredPerson");
            insuredPersonCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", insuredPerson));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByPolisTypeId(System.Int32 concept)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			ICriteria conceptCriteria = criteria.CreateCriteria("Concept");
            conceptCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetBySmoId(System.Guid organisation)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			ICriteria organisationCriteria = criteria.CreateCriteria("Organisation");
            organisationCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", organisation));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByStatementId(System.Guid statement)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			ICriteria statementCriteria = criteria.CreateCriteria("Statement");
            statementCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", statement));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByIsActive(System.Boolean isActive)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("IsActive", isActive));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByDateTo(System.DateTime dateTo)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("DateTo", dateTo));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByDateFrom(System.DateTime dateFrom)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("DateFrom", dateFrom));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByEnp(System.String enp)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Enp", enp));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByPolisNumber(System.String polisNumber)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("PolisNumber", polisNumber));
			
			return criteria.List<MedicalInsurance>();
        }
		
		public IList<MedicalInsurance> GetByPolisSeriaPolisNumber(System.String polisSeria, System.String polisNumber)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(MedicalInsurance));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("PolisSeria", polisSeria));
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("PolisNumber", polisNumber));
			
			return criteria.List<MedicalInsurance>();
        }
		
		#endregion
    }
}