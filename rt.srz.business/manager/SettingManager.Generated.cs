//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface ISettingManager : IManagerBase<rt.srz.model.srz.Setting, System.Guid>
    {
		// Get Methods
		IList<Setting> GetByOrganisationId(System.Guid organisation);
		IList<Setting> GetByUserId(System.Guid userId);
		IList<Setting> GetByWorkstationId(System.Guid workstation);
    }

    partial class SettingManager : ManagerBase<rt.srz.model.srz.Setting, System.Guid>, ISettingManager
    {
        #region Get Methods

		
		public IList<Setting> GetByOrganisationId(System.Guid organisation)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Setting));
			
			
			ICriteria organisationCriteria = criteria.CreateCriteria("Organisation");
            organisationCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", organisation));
			
			return criteria.List<Setting>();
        }
		
		public IList<Setting> GetByUserId(System.Guid userId)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Setting));
			
			
			ICriteria userIdCriteria = criteria.CreateCriteria("UserId");
            userIdCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", userId));
			
			return criteria.List<Setting>();
        }
		
		public IList<Setting> GetByWorkstationId(System.Guid workstation)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Setting));
			
			
			ICriteria workstationCriteria = criteria.CreateCriteria("Workstation");
            workstationCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", workstation));
			
			return criteria.List<Setting>();
        }
		
		#endregion
    }
}