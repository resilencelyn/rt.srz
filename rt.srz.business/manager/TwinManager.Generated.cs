//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface ITwinManager : IManagerBase<rt.srz.model.srz.Twin, System.Guid>
    {
		// Get Methods
		IList<Twin> GetByFirstInsuredPersonId(System.Guid insuredPerson1);
		IList<Twin> GetBySecondInsuredPersonId(System.Guid insuredPerson2);
		IList<Twin> GetByTwinTypeId(System.Int32 concept);
    
    }

    partial class TwinManager : ManagerBase<rt.srz.model.srz.Twin, System.Guid>, ITwinManager
    {
        #region Get Methods

		
		public IList<Twin> GetByFirstInsuredPersonId(System.Guid insuredPerson1)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Twin));
			
			
			ICriteria insuredPerson1Criteria = criteria.CreateCriteria("InsuredPerson1");
            insuredPerson1Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", insuredPerson1));
			
			return criteria.List<Twin>();
        }
		
		public IList<Twin> GetBySecondInsuredPersonId(System.Guid insuredPerson2)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Twin));
			
			
			ICriteria insuredPerson2Criteria = criteria.CreateCriteria("InsuredPerson2");
            insuredPerson2Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", insuredPerson2));
			
			return criteria.List<Twin>();
        }
		
		public IList<Twin> GetByTwinTypeId(System.Int32 concept)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Twin));
			
			
			ICriteria conceptCriteria = criteria.CreateCriteria("Concept");
            conceptCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept));
			
			return criteria.List<Twin>();
        }
		
		#endregion
    }
}