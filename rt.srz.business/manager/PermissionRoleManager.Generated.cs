//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface IPermissionRoleManager : IManagerBase<rt.srz.model.srz.PermissionRole, System.Guid>
    {
		// Get Methods
		IList<PermissionRole> GetByPermissionId(System.Guid permission);
		IList<PermissionRole> GetByRoleId(System.Guid role);
    }

    partial class PermissionRoleManager : ManagerBase<rt.srz.model.srz.PermissionRole, System.Guid>, IPermissionRoleManager
    {
        #region Get Methods

		
		public IList<PermissionRole> GetByPermissionId(System.Guid permission)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(PermissionRole));
			
			
			ICriteria permissionCriteria = criteria.CreateCriteria("Permission");
            permissionCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", permission));
			
			return criteria.List<PermissionRole>();
        }
		
		public IList<PermissionRole> GetByRoleId(System.Guid role)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(PermissionRole));
			
			
			ICriteria roleCriteria = criteria.CreateCriteria("Role");
            roleCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", role));
			
			return criteria.List<PermissionRole>();
        }
		
		#endregion
    }
}