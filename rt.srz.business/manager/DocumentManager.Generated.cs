//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface IDocumentManager : IManagerBase<rt.srz.model.srz.Document, System.Guid>
    {
		// Get Methods
		IList<Document> GetByDocumentTypeId(System.Int32 concept);
		IList<Document> GetByNumber(System.String number);
		IList<Document> GetBySeries(System.String series);
		IList<Document> GetBySeriesNumber(System.String series, System.String number);
		IList<Document> GetByIsBad(System.Boolean isBad);
    }

    partial class DocumentManager : ManagerBase<rt.srz.model.srz.Document, System.Guid>, IDocumentManager
    {
        #region Get Methods

		
		public IList<Document> GetByDocumentTypeId(System.Int32 concept)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Document));
			
			
			ICriteria conceptCriteria = criteria.CreateCriteria("Concept");
            conceptCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept));
			
			return criteria.List<Document>();
        }
		
		public IList<Document> GetByNumber(System.String number)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Document));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Number", number));
			
			return criteria.List<Document>();
        }
		
		public IList<Document> GetBySeries(System.String series)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Document));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Series", series));
			
			return criteria.List<Document>();
        }
		
		public IList<Document> GetBySeriesNumber(System.String series, System.String number)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Document));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Series", series));
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("Number", number));
			
			return criteria.List<Document>();
        }
		
		public IList<Document> GetByIsBad(System.Boolean isBad)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(Document));
			
			
			criteria.Add(NHibernate.Criterion.Expression.Eq("IsBad", isBad));
			
			return criteria.List<Document>();
        }
		
		#endregion
    }
}