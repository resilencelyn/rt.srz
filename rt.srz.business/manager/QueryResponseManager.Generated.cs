//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.srz.model.srz;

namespace rt.srz.business.manager
{
    public partial interface IQueryResponseManager : IManagerBase<rt.srz.model.srz.QueryResponse, System.Guid>
    {
		// Get Methods
		IList<QueryResponse> GetByAddressId(System.Guid address);
		IList<QueryResponse> GetByFeatureId(System.Int32 concept1);
		IList<QueryResponse> GetByDeadInfoId(System.Guid deadInfo);
		IList<QueryResponse> GetByDocumentUdlId(System.Guid document);
		IList<QueryResponse> GetByInsuredPersonDataId(System.Guid insuredPersonDatum);
		IList<QueryResponse> GetByMessageId(System.Guid message);
		IList<QueryResponse> GetByTrustLevelId(System.Int32 concept2);
    
    }

    partial class QueryResponseManager : ManagerBase<rt.srz.model.srz.QueryResponse, System.Guid>, IQueryResponseManager
    {
        #region Get Methods

		
		public IList<QueryResponse> GetByAddressId(System.Guid address)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria addressCriteria = criteria.CreateCriteria("Address");
            addressCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", address));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByFeatureId(System.Int32 concept1)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria concept1Criteria = criteria.CreateCriteria("Concept1");
            concept1Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept1));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByDeadInfoId(System.Guid deadInfo)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria deadInfoCriteria = criteria.CreateCriteria("DeadInfo");
            deadInfoCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", deadInfo));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByDocumentUdlId(System.Guid document)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria documentCriteria = criteria.CreateCriteria("Document");
            documentCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", document));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByInsuredPersonDataId(System.Guid insuredPersonDatum)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria insuredPersonDatumCriteria = criteria.CreateCriteria("InsuredPersonDatum");
            insuredPersonDatumCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", insuredPersonDatum));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByMessageId(System.Guid message)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria messageCriteria = criteria.CreateCriteria("Message");
            messageCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", message));
			
			return criteria.List<QueryResponse>();
        }
		
		public IList<QueryResponse> GetByTrustLevelId(System.Int32 concept2)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(QueryResponse));
			
			
			ICriteria concept2Criteria = criteria.CreateCriteria("Concept2");
            concept2Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", concept2));
			
			return criteria.List<QueryResponse>();
        }
		
		#endregion
    }
}