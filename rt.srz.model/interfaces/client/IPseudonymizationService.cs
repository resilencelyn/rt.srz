//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;
using System;
using System.ServiceModel;

namespace rt.srz.model.interfaces.client
{
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [DataContract(Name = "FieldVariation", Namespace = "http://schemas.datacontract.org/2004/07/GISOMS.HL7.Services.Pseudonymization")]
  [Serializable()]
  public partial class FieldVariation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
  {

    [NonSerialized()]
    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    [OptionalField()]
    private FieldTypes fieldTypeField;

    [OptionalField()]
    private string valueField;

    [global::System.ComponentModel.BrowsableAttribute(false)]
    public System.Runtime.Serialization.ExtensionDataObject ExtensionData
    {
      get
      {
        return this.extensionDataField;
      }
      set
      {
        this.extensionDataField = value;
      }
    }

    [DataMember()]
    public FieldTypes fieldType
    {
      get
      {
        return this.fieldTypeField;
      }
      set
      {
        if ((this.fieldTypeField.Equals(value) != true))
        {
          this.fieldTypeField = value;
          this.RaisePropertyChanged("fieldType");
        }
      }
    }

    [DataMember()]
    public string value
    {
      get
      {
        return this.valueField;
      }
      set
      {
        if ((object.ReferenceEquals(this.valueField, value) != true))
        {
          this.valueField = value;
          this.RaisePropertyChanged("value");
        }
      }
    }

    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
      System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
      if ((propertyChanged != null))
      {
        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [DataContract(Name = "FieldTypes", Namespace = "http://schemas.datacontract.org/2004/07/GISOMS.HL7.Services.Pseudonymization")]
  public enum FieldTypes : int
  {

    [EnumMember()]
    EventInsurance = 0,

    [EnumMember()]
    PolicyType = 1,

    [EnumMember()]
    ENP = 2,

    [EnumMember()]
    EventInsuranceDate = 3,

    [EnumMember()]
    PolicyNumber = 4,

    [EnumMember()]
    FamilyName = 5,

    [EnumMember()]
    FirstName = 6,

    [EnumMember()]
    MiddleName = 7,

    [EnumMember()]
    Gender = 8,

    [EnumMember()]
    BirthDate = 9,

    [EnumMember()]
    BirthPlace = 10,

    [EnumMember()]
    IdCardType = 11,

    [EnumMember()]
    IdCardNumber = 12,

    [EnumMember()]
    IdCardDate = 13,

    [EnumMember()]
    SNILS = 14,

    [EnumMember()]
    InsuranceTerritory = 15,

    [EnumMember()]
    InsuranceCompanyCode = 16,

    [EnumMember()]
    PolicyActualFrom = 17,

    [EnumMember()]
    PolicyActualTo = 18,

    [EnumMember()]
    Citizenry_OKSM_3 = 19,

    [EnumMember()]
    DeathMark = 20,

    [EnumMember()]
    DeathDate = 21,

    [EnumMember()]
    RegistrationTerritory = 22,

    [EnumMember()]
    OrganizationType = 23,

    [EnumMember()]
    PvpId = 24,

    [EnumMember()]
    InsuranceTempNumber = 25,

    [EnumMember()]
    Region = 1000,

    [EnumMember()]
    InsuranceCardID = 1003,

    [EnumMember()]
    InsuranceCompanyCoding = 1005,

    [EnumMember()]
    Citizenry = 1010,

    [EnumMember()]
    Citizenry_OKIN_2 = 1011,

    [EnumMember()]
    IdCardType_IdCardNumber = -101,

    [EnumMember()]
    PolicyType_PolicyNumber = -102,

    [EnumMember()]
    InsuranceCompanyCode_InsuranceCompanyCoding = -103,

    [EnumMember()]
    Undefined = -10000,
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [DataContract(Name = "FIO", Namespace = "http://schemas.datacontract.org/2004/07/GISOMS.HL7.Services.Pseudonymization")]
  [Serializable()]
  public partial class FIO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
  {

    [NonSerialized()]
    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    private FieldVariation familyNameField;

    private FieldVariation firstNameField;

    private FieldVariation middleNameField;

    [global::System.ComponentModel.BrowsableAttribute(false)]
    public System.Runtime.Serialization.ExtensionDataObject ExtensionData
    {
      get
      {
        return this.extensionDataField;
      }
      set
      {
        this.extensionDataField = value;
      }
    }

    [DataMember(IsRequired = true)]
    public FieldVariation familyName
    {
      get
      {
        return this.familyNameField;
      }
      set
      {
        if ((object.ReferenceEquals(this.familyNameField, value) != true))
        {
          this.familyNameField = value;
          this.RaisePropertyChanged("familyName");
        }
      }
    }

    [DataMember(IsRequired = true)]
    public FieldVariation firstName
    {
      get
      {
        return this.firstNameField;
      }
      set
      {
        if ((object.ReferenceEquals(this.firstNameField, value) != true))
        {
          this.firstNameField = value;
          this.RaisePropertyChanged("firstName");
        }
      }
    }

    [DataMember(IsRequired = true)]
    public FieldVariation middleName
    {
      get
      {
        return this.middleNameField;
      }
      set
      {
        if ((object.ReferenceEquals(this.middleNameField, value) != true))
        {
          this.middleNameField = value;
          this.RaisePropertyChanged("middleName");
        }
      }
    }

    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
      System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
      if ((propertyChanged != null))
      {
        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [DataContract(Name = "Document", Namespace = "http://schemas.datacontract.org/2004/07/GISOMS.HL7.Services.Pseudonymization")]
  [Serializable()]
  public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
  {

    [NonSerialized()]
    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    [OptionalField()]
    private FieldVariation idCardNumberField;

    [OptionalField()]
    private FieldVariation idCardTypeField;

    [global::System.ComponentModel.BrowsableAttribute(false)]
    public System.Runtime.Serialization.ExtensionDataObject ExtensionData
    {
      get
      {
        return this.extensionDataField;
      }
      set
      {
        this.extensionDataField = value;
      }
    }

    [DataMember()]
    public FieldVariation idCardNumber
    {
      get
      {
        return this.idCardNumberField;
      }
      set
      {
        if ((object.ReferenceEquals(this.idCardNumberField, value) != true))
        {
          this.idCardNumberField = value;
          this.RaisePropertyChanged("idCardNumber");
        }
      }
    }

    [DataMember()]
    public FieldVariation idCardType
    {
      get
      {
        return this.idCardTypeField;
      }
      set
      {
        if ((object.ReferenceEquals(this.idCardTypeField, value) != true))
        {
          this.idCardTypeField = value;
          this.RaisePropertyChanged("idCardType");
        }
      }
    }

    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
      System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
      if ((propertyChanged != null))
      {
        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [DataContract(Name = "HashData", Namespace = "http://schemas.datacontract.org/2004/07/GISOMS.HL7.Services.Pseudonymization")]
  [Serializable()]
  public partial class HashData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
  {

    [NonSerialized()]
    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    [OptionalField()]
    private byte[] hashField;

    [OptionalField()]
    private string keyField;

    [global::System.ComponentModel.BrowsableAttribute(false)]
    public System.Runtime.Serialization.ExtensionDataObject ExtensionData
    {
      get
      {
        return this.extensionDataField;
      }
      set
      {
        this.extensionDataField = value;
      }
    }

    [DataMember()]
    public byte[] hash
    {
      get
      {
        return this.hashField;
      }
      set
      {
        if ((object.ReferenceEquals(this.hashField, value) != true))
        {
          this.hashField = value;
          this.RaisePropertyChanged("hash");
        }
      }
    }

    [DataMember()]
    public string key
    {
      get
      {
        return this.keyField;
      }
      set
      {
        if ((object.ReferenceEquals(this.keyField, value) != true))
        {
          this.keyField = value;
          this.RaisePropertyChanged("key");
        }
      }
    }

    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
      System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
      if ((propertyChanged != null))
      {
        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [ServiceContract]
  public interface IPseudonymizationService
  {

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/Pseudonymization", ReplyAction = "http://tempuri.org/IPseudonymizationService/PseudonymizationResponse")]
    void Pseudonymization(string UrlInputXml, string UrlOutputXml);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/Pseudonymization2", ReplyAction = "http://tempuri.org/IPseudonymizationService/Pseudonymization2Response")]
    string Pseudonymization2(string inputXml);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/PseudonymizationIn1", ReplyAction = "http://tempuri.org/IPseudonymizationService/PseudonymizationIn1Response")]
    string PseudonymizationIn1(string urlInputXml);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/CalculateHashes", ReplyAction = "http://tempuri.org/IPseudonymizationService/CalculateHashesResponse")]
    HashData[] CalculateHashes(FieldVariation[] variations, FIO[] initials, Document[] documents);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/CheckHashesCount", ReplyAction = "http://tempuri.org/IPseudonymizationService/CheckHashesCountResponse")]
    HashData[] CheckHashesCount(FieldVariation[] variations, FIO initials, Document[] documents);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPseudonymizationService/Anonymization", ReplyAction = "http://tempuri.org/IPseudonymizationService/AnonymizationResponse")]
    void Anonymization(string urlInputXml, string UrlOutputXml);
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
  public interface IPseudonymizationServiceChannel : IPseudonymizationService, System.ServiceModel.IClientChannel
  {
  }

  /// <summary>
  /// The key.
  /// </summary>
  [DataContract]
  public class Key
  {
    /// <summary>
    /// The formula.
    /// </summary>
    [DataMember]
    public FieldTypes[] formula;

    /// <summary>
    /// The number.
    /// </summary>
    [DataMember]
    public string number;
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
  public partial class PseudonymizationServiceClient : System.ServiceModel.ClientBase<IPseudonymizationService>, IPseudonymizationService
  {

    public PseudonymizationServiceClient()
    {
    }

    public PseudonymizationServiceClient(string endpointConfigurationName) :
      base(endpointConfigurationName)
    {
    }

    public PseudonymizationServiceClient(string endpointConfigurationName, string remoteAddress) :
      base(endpointConfigurationName, remoteAddress)
    {
    }

    public PseudonymizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
      base(endpointConfigurationName, remoteAddress)
    {
    }

    public PseudonymizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
      base(binding, remoteAddress)
    {
    }

    public void Pseudonymization(string UrlInputXml, string UrlOutputXml)
    {
      base.Channel.Pseudonymization(UrlInputXml, UrlOutputXml);
    }

    public string Pseudonymization2(string inputXml)
    {
      return base.Channel.Pseudonymization2(inputXml);
    }

    public string PseudonymizationIn1(string urlInputXml)
    {
      return base.Channel.PseudonymizationIn1(urlInputXml);
    }

    public HashData[] CalculateHashes(FieldVariation[] variations, FIO[] initials, Document[] documents)
    {
      return base.Channel.CalculateHashes(variations, initials, documents);
    }

    public HashData[] CheckHashesCount(FieldVariation[] variations, FIO initials, Document[] documents)
    {
      return base.Channel.CheckHashesCount(variations, initials, documents);
    }

    public void Anonymization(string urlInputXml, string UrlOutputXml)
    {
      base.Channel.Anonymization(urlInputXml, UrlOutputXml);
    }
  }
}
