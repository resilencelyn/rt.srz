<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="StructureMap" type="StructureMap.Configuration.StructureMapConfigurationSection,StructureMap" />
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="PoolNhibernateSection" type="rt.core.business.nhibernate.PoolNhibernateSection, rt.core.business, Version=1.0.0.0, Culture=neutral" />
    <section name="SpecialCalendarDaysSection" type="rt.srz.model.configSection.productioncalendar.SpecialCalendarDayConfigurationSection, rt.srz.model, Version=1.0.0.0, Culture=neutral" />
    <section name="ProtocolSettingsSection" type="rt.uec.model.protocol.ProtocolSettingsSection, rt.uec.model, Version=1.0.0.0, Culture=neutral" />
    <section name="exchangeSettings" type="rt.core.business.configuration.ExchangeSettings, rt.core.business, Version=1.0.0.0, Culture=neutral" />
    <section name="backupSettings" type="rt.core.business.configuration.BackupSettings, rt.core.business, Version=1.0.0.0, Culture=neutral" />
    <section name="synchronizationSettings" type="rt.atl.business.configuration.SynchronizationSettings, rt.atl.business, Version=1.0.0.0, Culture=neutral" />
    <section name="quartz" type="System.Configuration.NameValueSectionHandler" />
    <sectionGroup name="devExpress">
      <section name="themes" type="DevExpress.Web.ASPxClasses.ThemesConfigurationSection, DevExpress.Web.v12.1, Version=12.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="compression" type="DevExpress.Web.ASPxClasses.CompressionConfigurationSection, DevExpress.Web.v12.1, Version=12.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="settings" type="DevExpress.Web.ASPxClasses.SettingsConfigurationSection, DevExpress.Web.v12.1, Version=12.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="errors" type="DevExpress.Web.ASPxClasses.ErrorsConfigurationSection, DevExpress.Web.v12.1, Version=12.1.12.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="crystalQuartz" type="CrystalQuartz.Web.Configuration.CrystalQuartzConfigurationGroup">
      <section name="provider" type="CrystalQuartz.Web.Configuration.ProviderSectionHandler" requirePermission="false" allowDefinition="Everywhere" />
    </sectionGroup>
  </configSections>
  <connectionStrings>
    <add name="default" connectionString="Data Source=syurov; Initial Catalog=rt_srz_demo;User ID=pvp;Password=elianora" providerName="" />
    <add name="NHibernateCfgAtl.xml" connectionString="Data Source=syurov;Initial Catalog=atl_srz_empty;User ID=pvp;Password=elianora" />
  </connectionStrings>
  <appSettings>
    <add key="IsNeedRedirectToMainPage" value="false" />
    <add key="KLADRControlType" value="Intellisense" />
    <add key="PhotoControlType" value="Upload" />
    <add key="COMPort" value="7" />
    <add key="MinimumPrefixLengthForAdress" value="1" />
    <add key="ProcExecTimeout" value="10800" />
    <add key="BeingInstalled" value="true" />
    <add key="IsOnline" value="true" />
    <add key="TimeToOnline" value="03/22/2014 06:01:00" />
  </appSettings>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <!--<property name="connection.connection_string">Data Source=dev-mos-erp;Initial Catalog=pvp_new;User ID=pvp;Password=elianora</property>-->
      <property name="command_timeout">300</property>
      <mapping assembly="rt.srz.business" />

    </session-factory>
  </hibernate-configuration>
  <StructureMap>
    <!--configSource="Configuration\StructureMap.config" /-->
    <!--Регистрация бизнеслогики-->
    <Registry Type="rt.core.business.registry.CoreRegistry, rt.core.business" />
    <Registry Type="rt.core.business.registry.NHibernateRegistry, rt.core.business" />
    <!--<Registry Type="rt.core.business.registry.QuartzRegistry, rt.core.business" />-->
    <Registry Type="rt.core.business.security.registry.SecurityRepositoryRegistry, rt.core.business.security" />
    <Registry Type="rt.srz.business.registry.RepositoryRegistry, rt.srz.business" />
    <Registry Type="rt.srz.business.exchange.registry.RepositoryRegistry, rt.srz.business.exchange" />
    <Registry Type="rt.atl.business.registry.RepositoryRegistry, rt.atl.business" />
    <!--Внутренняя регистрация сервисов-->
    <Registry Type="rt.core.service.security.registry.AuthServiceRegistry, rt.core.service.security" />
    <Registry Type="rt.srz.services.registry.ServicesRegistry, rt.srz.services" />
    <Registry Type="rt.atl.services.registry.ServicesRegistry, rt.atl.services" />
  </StructureMap>
  <nlog configSource="Configuration\NLog.config" />
  <PoolNhibernateSection>
    <FileNameConfigaration>
      <add Name="NHibernateCfgAtl.xml" />
    </FileNameConfigaration>
  </PoolNhibernateSection>
  <exchangeSettings configSource="Configuration\ExchangeSettings.config" />
  <backupSettings configSource="Configuration\BackupSettings.config" />
  <synchronizationSettings configSource="Configuration\SynchronizationSettings.config" />
  <SpecialCalendarDaysSection configSource="Configuration\SpecialCalendarDaySection.config" />
  <ProtocolSettingsSection>
    <!--Секция для указания трудового календаря-->
    <Settings>
      <add Type="Output" Value="01" />
      <add Type="LogFile" Value="01" />
      <add Type="LogName" Value="Logfile.txt" />
      <add Type="Reader" Value="00" />
      <add Type="Card" Value="00" />
      <add Type="Cardlib" Value="01" />
      <add Type="Funclib" Value="00" />
      <add Type="Oplib" Value="00" />
      <add Type="TellMe" Value="00" />
      <add Type="Extern" Value="00" />
    </Settings>
  </ProtocolSettingsSection>
  <quartz>
    <!-- configure Thread Pool -->
    <add key="quartz.threadPool.instanceName" value="SrzScheduler" />
    <add key="quartz.threadPool.threadCount" value="100" />

    <!-- configure Scheduler -->
    <add key="quartz.scheduler.instanceId" value="instance_one" />

    <!-- configure Job Store -->
    <add key="quartz.jobStore.type" value="Quartz.Impl.AdoJobStore.JobStoreTX, Quartz" />
    <add key="quartz.jobStore.useProperties" value="true" />
    <add key="quartz.jobStore.dataSource" value="default" />
    <add key="quartz.jobStore.tablePrefix" value="QRTZ_" />
    <add key="quartz.jobStore.lockHandler.type" value="Quartz.Impl.AdoJobStore.UpdateLockRowSemaphore, Quartz" />
    <add key="quartz.jobStore.driverDelegateType" value="Quartz.Impl.AdoJobStore.StdAdoDelegate, Quartz" />

    <!-- configure Data Source -->
    <add key="quartz.dataSource.default.connectionString" value="Data Source=syurov; Initial Catalog=quartz;User ID=pvp;Password=elianora" />
    <add key="quartz.dataSource.default.provider" value="SqlServer-20" />

    <!-- configure jobs and triggers definition -->
    <add key="quartz.plugin.xml.type" value="Quartz.Plugin.Xml.XMLSchedulingDataProcessorPlugin, Quartz" />
    <add key="quartz.plugin.xml.fileNames" value="Configuration\QuartzJobs.config" />
  </quartz>
  <location path="Styles">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="~/Account/Register.aspx">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
 <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" />
    <bindings>
      <basicHttpBinding>
        <binding name="longMessageBindings" closeTimeout="01:00:00" openTimeout="01:00:00" receiveTimeout="01:00:00" sendTimeout="01:00:00" maxReceivedMessageSize="1073741824" />
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="wsHttpEndpointName" maxReceivedMessageSize="2147483647" sendTimeout="00:05:00" receiveTimeout="00:05:00" />
        <binding name="longMessageBindings" closeTimeout="01:00:00" openTimeout="01:00:00" receiveTimeout="01:00:00" sendTimeout="01:00:00" maxReceivedMessageSize="1073741824">
          <reliableSession inactivityTimeout="01:00:00" />
        </binding>
      </wsHttpBinding>
      <netTcpBinding>
        <binding name="longMessageBindings" closeTimeout="01:00:00" openTimeout="01:00:00" receiveTimeout="01:00:00" sendTimeout="01:00:00" maxReceivedMessageSize="1073741824" transferMode="StreamedResponse">
          <readerQuotas maxArrayLength="1073741824" />
          <reliableSession inactivityTimeout="01:00:00" />
          <security mode="None">
            <transport clientCredentialType="None" protectionLevel="None" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <services>
      <service name="rt.srz.services.Statement.StatementGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.IStatementService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.SMO.SmoGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.ISmoService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.Security.SecurityGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.ISecurityService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.KLADR.KladrGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.IKladrService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.Uir.UirGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.IUirService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.atl.services.AtlGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.atl.model.interfaces.Service.IAtlService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.NSI.NsiGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.srz.model.interfaces.service.INsiService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.core.service.security.AuthGate" behaviorConfiguration="GateBehavior2">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" contract="rt.core.model.security.IAuthService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="rt.srz.services.Uec.UecGate" behaviorConfiguration="GateBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="longMessageBindings" behaviorConfiguration="protoEndpointBehavior" contract="rt.uec.model.Interfaces.IUecService" bindingNamespace="www.rintech.ru/srz" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <client>
      <endpoint address="http://localhost:8001/PseudonymizationService/" binding="wsHttpBinding" bindingConfiguration="wsHttpEndpointName" contract="rt.srz.model.interfaces.client.IPseudonymizationService" name="wsHttpEndpointName" />
    </client>
    <behaviors>
      <endpointBehaviors>
        <behavior name="clientdebug">
          <callbackDebug includeExceptionDetailInFaults="true" />
          <MyMessageInspector />
        </behavior>
        <behavior name="protoEndpointBehavior">
          <protobuf />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="debug">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="GateBehavior2">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="GateBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceAuthenticationManager serviceAuthenticationManagerType="rt.core.services.challenge.TokenAuthenticationManager, rt.core.services" />
          <serviceAuthorization principalPermissionMode="Custom">
            <authorizationPolicies>
              <add policyType="rt.core.services.challenge.ChallengeAuthorizationPolicy, rt.core.services" />
            </authorizationPolicies>
          </serviceAuthorization>
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
        <behavior name="defaultBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="MyMessageInspector" type="rt.core.services.wcf.MessageFaultInspector, rt.core.services, Version=1.0.0.0, Culture=neutral" />
        <add name="protobuf" type="ProtoBuf.ServiceModel.ProtoBehaviorExtension, protobuf-net, Version=2.0.0.668, Culture=neutral, PublicKeyToken=257b51d87d2e4d67" />
        <add name="ChallengeClientMessageInspector" type="rt.core.service.client.TokenMessageInspector, rt.core.service.dto, Version=1.0.0.0, Culture=neutral" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <crystalQuartz>
    <provider>
      <add property="Type" value="rt.core.business.quartz.SchedulerProvider, rt.core.business" />
    </provider>
    <!--    <provider>-->
    <!--      <add property="Type" value="CrystalQuartz.Spring.SpringSchedulerProvider, CrystalQuartz.Spring" />-->
    <!--      <add property="SchedulerName" value="scheduler" />-->
    <!--    </provider>-->
  </crystalQuartz>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="NHibernate" publicKeyToken="aa95f207798dfdb4" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.4000" newVersion="4.0.1.4000" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="AjaxControlToolkit" publicKeyToken="28f01b0e84b6d53e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.7.123" newVersion="3.5.7.123" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="AjaxMin" publicKeyToken="21ef50ce11b5d80f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.5007.23725" newVersion="5.1.5007.23725" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="2.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  
  <devExpress>
    <compression enableHtmlCompression="false" enableCallbackCompression="true" enableResourceCompression="true" enableResourceMerging="false" />
    <themes enableThemesAssembly="true" styleSheetTheme="" theme="" />
    <errors callbackErrorRedirectUrl="" />
    <settings rightToLeft="false" />
  </devExpress>
</configuration>