#ifndef __OP_API_H_
#define __OP_API_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "opCmnFunc.h"
#include "opCtxFunc.h"
#include "HAL_Protocol.h"

//  Description:
//		Инициализирует выполнение операции УЭК.<p/> 
//		Используется в линейном интерфейсе и должна предшествовать началу выполнения любой операции ИБТ УЭК.<p/>
//		Выполняет следующие действия:
//		- Инициализирует сеанс протоколирования;
//		- Очищает и инициализирует контекст ИБТ переданными параметрами; 
//		- Селектирует приложение и инициализирует описатель карты и параметры контекста;
//		- Аутентифицирует терминал.
//  See Also:
//  Arguments:
//      p_opContext		 - Указатель на выделенный буфер контекста ИБТ. 
//		phCrd			 - Указатель на буфер описателя карты УЭК.
//		in_opCode		 - Код выполняемой операции ИБТ(см. 'opDescr.h').
//		in_pMetaInfo	 - Указатель на буфер с TLV-данными идентификатора услуги '9F15'(см. opCtxSetMetaInfo).<p/>
//						   Передаётся только для операций 'Оказание Услуги' и 'Разблокировка КРП'.  	
//		MetaInfoLen		 - Длина TLV-данных идентификатора услуги.
//		out_PAN23		 - Указатель на буфер для возвращаемый строки номера карты.
//		out_AppVer4		 - Указатель на буфер для возвращаемый строки версии карты.
//		out_effDate7	 - Указатель на буфер для возвращаемый строки с датой начала срока действия карты в формате 'ГГММДД'.
//		out_expDate7	 - Указатель на буфер для возвращаемый строки с датой окончания срока действия карты в формате 'ГГММДД'..
//		out_PassPrase51	 - Указатель на буфер для возвращаемый строки с фразой контрольного приветствия.
//		out_ifGostCrypto - Указатель на переменную, инициализируемую значением '1' при выборе терминалом криптоалгоритма ГОСТ, и значением '0' при выборе RSA.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Инициализация операции УЭК.
IL_FUNC IL_WORD  opApiInitOperation(s_opContext *p_opContext, IL_CARD_HANDLE *phCrd, IL_BYTE in_opCode,
  									  IL_BYTE *in_pMetaInfo, IL_WORD MetaInfoLen,
									  IL_CHAR *out_PAN23, IL_CHAR *out_AppVer4, IL_CHAR *out_effDate7, IL_CHAR *out_expDate7,
									  IL_CHAR *out_PassPrase51, IL_BYTE *out_ifGostCrypto);

//  Description:
//		Осуществляет процедуру верификации держателя карты УЭК.<p/> 
//		Указанная процедура предназначена для проверки ИД-приложением правомочности использования карты УЭК.<p/> 
//		Вызывается только после успешного выполнения аутентификации терминала.
//
//  See Also:
//		flAppCitizenVerification
//		flGetPassPhrase
//  Arguments:
//      p_opContext	 - Указатель на контекст ИБТ. 
//		PinNum		 - Номер используемого при верификации пароля.
//		in_strPin	 - Указатель на строку Win-1251 со значением пароля.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Верификация держателя карты УЭК.
IL_FUNC IL_WORD  opApiVerifyCitizen(s_opContext *p_opContext, IL_BYTE PinNum, IL_CHAR *in_strPin);

//  Description:
//      Считывет с карты указанные злементы данных.<p/>
//		Данные могут считываться с карты либо в "сыром" формате, либо автоматически конвертироваться в соответствии с параметрами во внешнем файле описателем данных 'sectors.ini'. 
//  See Also:
//      opCtxSetCardDataBuf
//  Arguments:
//      p_opContext		 - Указатель на контекст ИБТ.
//		in_CardDataDescr - Указатель на строку-описатель считываемых с карты данных в формате:<p/>
//		<p/>"[элемент1];[элемент2];...[элементN];"<p/>
//		<p/>Элементы считываемых данных задаются в формате:<p/>
//		<p/>"[x]S-B-D[-L]" , где:
//		- 'x' - Необязательный спецификатор для чтения "сырых" данных. Считанные данные в этом случае возвращаются в виде HEX-строки.
//		- 'S' - Идентификатор сектора считываемых данных.
//		- 'B' - Идентификатор блока считываемых данных.
//		- 'D' - Идентификатор считываемого элемента данных. При чтении из бинарного файла указывается десятичное значение смещения считываемого элемента данных от начала файла. При чтении из TLV-файла указывается шестнадцатиричное значение тега считываемого элемента данных.
//		- 'L' - Необязательный спецификатор, используемый только при считываамии "сырых" данных из бинарного файла и указывающий длину считываемых данных.
//		out_pCardDataBuf		 - Указатель на буфер для считанных с карты данных.<p/>
//		Считанные с карты данные возвращаются в виде строки следующего формата:<p/>
//		<p/>"[элемент1]=[значение1]\\n[элемент2=[значение2]\\n....[элементN=[значениеN]\\n".
//		inout_pCardDataLen		 - Указатель на максимальный размер буфера для считываемых данных и длину возвращаемых данных.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Чтение элементов данных карты. 
IL_FUNC IL_WORD  opApiReadCardData(s_opContext *p_opContext, IL_CHAR *in_CardDataDescr, IL_CHAR *out_pCardDataBuf, IL_WORD *inout_pCardDataLen);

//  Description:
//		Подготавливает запрос на аутентификацию ИД-приложения для оказания услуги.<p/> 
//		Требует предварительной установки в контекст ИБТ следующих параметров:
//			- Идентификатора типа прикладного сервиса/услуги (MetsInfo);
//			- Дополнительных сведений об операции (ExtraData) для операции 'Оказание Услуги'.
//			- Указателей на внешний буфер для формируемого запроса и его максимальную длину;
//			- Режима аутентификации 'Online' или 'Offline'. 
//  See Also:
//		opApiInitOperation
//		opCtxSetExtraData
//		opCtxSetAuthRequestBuf
//  Arguments:
//      p_opContext	 - Указатель на контекст ИБТ. 
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Подготовка запроса на аутентификацию ИД-приложения для оказания услуги.
IL_FUNC IL_WORD	 opApiPrepareAppAuthRequest(s_opContext *p_opContext);

//  Description:
//		Проверяет достоверность данных результатов аутентификации ИД-приложения и возвращает код аутентификации.
//  See Also:
//		opApiPrepareAppAuthRequest
//  Arguments:
//      p_opContext				- Указатель на контекст ИБТ. 
//		in_pAuthResponseData	- Данные ответа с результатами аутентификации ИД-приложения.
//		in_AuthResponseDataLen	- Длина данных ответа.
//		*out_pAuthResult		- Указатель на переменную, инициализируемую значением возвращённого кода аутентификации ИД-приложения.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Проверка результатов аутентификации ИД-приложения.
IL_FUNC IL_WORD  opApiCheckAppAuthResponse(s_opContext *p_opContext, 
												  IL_BYTE *in_pAuthResponseData, IL_WORD in_AuthResponseDataLen, 
												  IL_WORD *out_pAuthResult);

//  Description:
//		Подготавливает запрос на аутентификацию эмитента ИД-приложения для последующего установления защищённого обмена сообщениями между эмитентом ИД-приложения и картой (ИД-приложением).<p/> 
//		Запрос формируется на основе данных предшествующего ему запроса на аутентификацию ИД-приложения для оказания услуги и размещается в том же буфере.<p/>
//		В качестве значения штампа времени выполнения операции (тег 9F21) используется значение, сформированное ранее в запросе аутентификации ИД-приложения на оказание услуги.
//  See Also:
//		opApiPrepareAppAuthRequest
//  Arguments:
//      p_opContext	 - Указатель на контекст ИБТ. 
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Подготовка запроса на аутентификацию эмитента ИД-приложения.
IL_FUNC IL_WORD opApiPrepareAppAuthRequestIssSession(s_opContext *p_opContext);

//  Description:
//		Устанавливает сессию для защищённого обмена сообщениями между эмитентом ИД-приложения и картой (ИД-приложением).<p/>
//		Перед вызовом этой функции должен быть сформирован запрос на аутентификацию ИД-приложения.  
//  See Also:
//		opApiPrepareAppAuthRequestIssSession
//  Arguments:
//      p_opContext			  - Указатель на контекст ИБТ. 
//		in_pHostData20		  - Указатель на буфер с конкатенированными данными криптограммы аутентификации хоста (4 байта) и случайного числа хоста (16 байт).
//		HostDataLen			  - Длина конкатенированных данных хоста.
//		out_pHostChallenge16  - Указатель на буфер для возвращаемого значения случайного числа хоста (16 байт).
//		out_pCardCryptogramm4 - Указатель на буфер для возвращаемого значения криптограммы аутентификации карты (4 байта).
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Установка защищённой сессии с эмитентом ИД-приложения.
IL_FUNC IL_WORD  opApiSetIssuerCryptoSession(s_opContext *p_opContext, 
											 IL_BYTE *in_pHostData20, IL_BYTE HostDataLen,
											 IL_BYTE *out_pHostChallenge16, IL_BYTE *out_pCardCryptogramm4);

//  Description:
//		Изменяет значение ПИН-код карты УЭК на новое.<p/>
//		Перед вызовом этой функции должна быть успешно проведена процедура верификации держателя карты.
//  See Also:
//		opApiVerifyCitizen
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ. 
//		PinNum		- Номер изменяемого ПИН-кода.
//		in_newPin	- Указатель на строку Win-1251 с новым значением ПИН-кода.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Смена ПИН-кода карты УЭК.
IL_FUNC IL_WORD  opApiManagePinPuk(s_opContext *p_opContext, IL_BYTE PinNum, IL_CHAR *in_newPin);

//  Description:
//		Завершает выполнение текущей операции ИБТ УЭК.<p/>
//		Выполняет следующие действия:
//		- Закрывает сессию с картой;
//		- Освобождает карт-ридер; 
//		- Завершает сеанс протоколирования.
//  See Also:
//		opApiInitOperation
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ. 
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Завершение операции ИБТ УЭК.
IL_FUNC IL_WORD  opApiDeinitOperation(s_opContext *p_opContext);

//  Description:
//      Получает строку-описатель элементов блока данных для их последующего редактирования.
//  See Also:
//		opCtxSetBlockDataBuf   
//  Arguments:
//      p_opContext			- Указатель на контекст ИБТ.
//		in_pBlockId			- Указатель на строку-идентификатор редактируемого блока в формате "S-B[-T1,T2,...Tn]", где:
//								- S - идентификатор сектора,
//								- B - идентификатор блока редактируемых данных,
//								- T1...Tn - необязательный перечень идентифмкаторов элементов данных, для которых возвращаются описатели.  
//		out_pBlockDataBuf	- Указатель на буфер для возвращаемой строки-описателя элемепнтов блока данных из файла 'sectors.ini' в формате:<p/>
//							  <p/>"[элемент1]\\n[элемент2]\\n...[элементN]\\n".<p/>
//							  <p/>Элементы строки-описателя блока данных возвращаются в формате:<p/>
//							  <p/>"S-B-D|T|L|N|V|" , где:
//								- S - Идентификатор сектора данных.
//								- B - Идентификатор блока данных.
//								- D - Идентификатор элемента данных. Для данных бинарного файла это десятичное значение смещения элемента данных от начала файла. Для данных TLV-файла это шестнадцатиричное значение тега элемента данных.
//								- T - Тип данного (см. 'opDescr.h').
//								- L - Максимальная длина данного.
//								- N - Наименование данного.
//								- V - Считанное и конвертированное текущее значение данного.
//		inout_pBlockDataLen - Указатель на максимальный размер буфера и длину возвращаемых данных.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение строки-описателя блока редактируемых данных.
IL_FUNC IL_WORD  opApiGetCardBlockDataDescr(s_opContext *p_opContext, IL_CHAR *in_BlockId, IL_CHAR *out_BlockDataBuf, IL_WORD *inout_pBlockDataLen);

//  Description:
//      Записывает на карту новые значения указанных злементов данных.<p/>
//		Данные могут записываться на карту либо в "сыром" формате, либо автоматически конвертироваться в соответствии с определённым во внешнем файле описателем данных 'sectors.ini' типу данного. 
//  See Also:
//		opApiGetCardBlockDataDescr
//  Arguments:
//      p_opContext		  - Указатель на контекст ИБТ.
//		in_pCardDataDescr - Указатель на строку-описатель с записываемыми на карту данными в формате:<p/>
//		<p/>"[элемент1]=[значение]\\n[элемент2]=[значение]\\n....[элементN]=[значение]\\n".<p/>
//		<p/>Элементы записываемых данных задаются в формате:<p/>
//		<p/>"[x]S-B-D[|L]" , где:
//		- 'x' - Необязательный спецификатор для записи "сырых" данных. Записываемые данные в этом случае передаются в виде HEX-строки.
//		- 'S' - Идентификатор сектора записываемого данного.
//		- 'B' - Идентификатор блока записываемого данного.
//		- 'D' - Идентификатор записываемого данных. При записи в бинарный файл указывается десятичное значение смещения записываемого элемента данных от начала файла. При записи в TLV-файл указывается шестнадцатиричное значение тега записываемого элемента данных.
//		- '|L' - Необязательный спецификатор максимальной длины записываемых данных. При его отсутствии используется значение из внешнего описателя данных 'sectors.ini'. При записи на карту редактируемых данных рекомендуется указывать значение максимальной длины из строки-описателя блока редактируемых данных. Записываемые на карту данные дополняются нулевыми символами до их максимальной длины.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Запись элементов данных на карту. 
IL_FUNC IL_WORD  opApiWriteCardData(s_opContext *p_opContext, IL_CHAR *in_pCardDataDescr);

//  Description:
//      Получает строку-описатель фактически размещённых на карте УЭК прикладных секторов данных.
//  See Also:
//		
//  Arguments:
//      p_opContext			- Указатель на контекст ИБТ.
//		out_pSectorsDescr	- Указатель на буфер для возвращаемой строки-описателя секторов данных в формате:<p/>
//							  <p/>"S|N|\\nS|N|\\n...S|N|\\n" , где:
//								- S - Идентификатор сектора данных.
//								- N - Наименование сектора данных из файла внешнего описателя данных 'sectors.ini'.
//		inout_pSectorsDescrLen - Указатель на максимальный размер буфера и длину возвращаемых данных.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение строки-описателя секторов данных.
IL_FUNC IL_WORD  opApiGetCardSectorsDescr(s_opContext *p_opContext, IL_CHAR *out_pSectorsDescr, IL_WORD *inout_pSectorsDescrLen);

//  Description:
//		Возвращает строку Win-1251 c описанием ошибки ИБТ УЭК по её коду.
//  See Also:
//  Arguments:
//      ErrorCode	- Код ошибки ИБТ УЭК (см. 'il_error.h'). 
//  Return Value:
//      IL_CHAR*	- Указатель на строку Win-1251 c описанием ошибки.
//  Summary:
//      Получение строки с описанием ошибки.
IL_FUNC IL_CHAR* opApiGetErrorDescr(IL_WORD ErrorCode); 

//  Description:
//		Возвращает сведения об используемой версии ИБТ УЭК и поддерживаемой версии ИД-приложения.
//  See Also:
//  Arguments:
//      out_LibVer	- Указатель на буфер для возвращаемой строки Win-1251 c номером исполузуемой версии. 
//		out_AppVer	- Указатель на буфер для возвращаемой строки Win-1251 c максимально поддерживаемой версией ИД-приложения
//  Return Value:
//      Отсутствует.
//  Summary:
//      Получение сведений о версии ИБТ УЭК.
IL_FUNC void     opApiGetVersion(IL_CHAR *out_LibVer, IL_CHAR *out_AppVer);

//  Description:
//      Определяет аппаратные возможности терминала по изъятию карты карты и.
//  See Also:
//  Arguments:
//      p_opContext		- Указатель на контекст ИБТ.
//		out_pCanCapture	- Указатель на переменную, инициализируемую признаком возможности аппаратного изъятия карты.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Определение возможностей терминала по изъятию карты. 
IL_FUNC IL_WORD  opApiCanCaptureCard(s_opContext *p_opContext, IL_BYTE *out_pCanCapture);

//  Description:
//      Получает данные из файла фотографии владельца карты УЭК.
//  See Also:
//  Arguments:
//      p_opContext			- Указатель на контекст ИБТ.
//		out_pPhotoBuf		- Указатель на буфер для считываемыых с карты данных фотографии.
//		inout_pPhotoBufLen	- Указатель на максимальный размер буфера и длину считанных данных.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение фотографии владельца карты.
IL_FUNC IL_WORD  opApiReadPhoto(s_opContext *p_opContext, IL_BYTE *out_pPhotoBuf, IL_WORD *inout_pPhotoBufLen);

//  Description:
//      Обновляет существующий или добавляет новый внешний описатель сектора данных карты УЭК в файле 'sectors.ini'.<p/>
//		Внешние описатели данных испльзуются, в частности, для определения типа элемента данного и автоматической конвертации данных при их чтении с карты или записи на карту.   	
//  See Also:
//		opApiGetCardBlockDataDescr
//  Arguments:
//      SectorId		 - Идентификатор обновляемого сектора данных.
//		AppVer			 - Версия ИД-приложения обновляемого сектора данных.
//		in_SectorExDescr - Строка-описатель обновляемой секции сектора данных следующего формата:<p/><p/>
//								"Icon=S;
//								BlockDecr1=T|L|N;DataDecr11=d|t|l|n;DataDecr12=d|t|l|n;...;DataDecr1N=d|t|l|n;<p/>
//								BlockDecr2=T|L|N;DataDecr21=d|t|l|n;DataDecr22=d|t|l|n;...;DataDecr2N=d|t|l|n;<p/>
//								. . .<p/>
//								BlockDecrN=T|L|N;DataDecrN1=d|t|l|n;DataDecrN2=d|t|l|n;...;DataDecrNN=d|t|l|n;" , где:
//								- S - Наименование сектора данных.
//								- T - Тип доступа к данным юлока.
//								- L - Длина файла блока.
//								- N - Наимнование блока.
//								- d - Идентификатор элемента данных. Для бинарного файла смещение элемента данного от начала файла. Для TLV-файла шестнадцатиричное значение тега элемента данных. 
//								- t - Тип элемента данных.
//								- l - Максимальная длина элемента данных.
//								- n - Наименование элемента данных.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Обновление файла внешнего описателя секторов данных карты.
IL_FUNC IL_WORD  opApiWriteSectorExDescr(IL_WORD SectorId, IL_BYTE AppVer, IL_CHAR *in_SectorExDescr);

//  Description:
//      Получает параметра шлюза IQFRONT из внешнего конфигурационного файла 'iqfront.ini'.
//  See Also:
//		
//  Arguments:
//      in_SectionName	- Имя секции конфигурационного файла.
//		in_ParamName	- Имя извлекаемого параметра.
//		out_ParamValue  - Указатель на буфер для возвращаемой строки со значением запрошенного параметра.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение параметра шлюза подсистемы IQFRONT.
IL_FUNC IL_WORD  opApiGetIqFrontParam(IL_CHAR *in_SectionName, IL_CHAR *in_ParamName, IL_CHAR *out_ParamValue);

//  Description:
//      Осущесвляет деинициализацию карт-ридера.
//  See Also:
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Сброс карт-ридера.
IL_FUNC IL_WORD  opApiReset(s_opContext *p_opContext);

//  Description:
//      Выполняет предустановленный ранее пакет APDU-команд.
//		Инициализирует данные с резултатами выполнения пакета.
//  See Also:
//		opCtxSetApduPacketBuf
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Выполнение пакета APDU-команд.
IL_FUNC IL_WORD  opApiRunApduPacket(s_opContext *p_opContext);

//  Description:
//      Выполняет предустановленный ранее пакет APDU-команд при функционировании терминала с Персональным Модулем Безопасности (ПМБ).<p/>
//		Инициализирует данные с резултатами выполнения пакета.
//  See Also:
//		opCtxSetApduPacketBuf
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Выполнение пакета APDU-команд.
IL_FUNC IL_WORD  opApiRunApduPacketSE(s_opContext *p_opContext); 

//  Description:
//      Получает электронную подпись держателя карты УЭК для сформированного запроса на оказание услуги.<p/>
//		Параметры для формирования электронной подписи должны быть предустановлены в контексте ИБТ.
//  See Also:
//		opCtxSetDigitalSignatureBuf
//		flMakeDigitalSignature
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение электронной подписи держателя карты УЭК.
IL_FUNC IL_WORD  opApiMakeDigitalSignature(s_opContext *p_opContext);

//  Description:
//      Устанавливает защищённую сессию с Поставщиком Услуги.<p/>
//		Параметры для создаваемого защищённого канала должны быть предустановлены в контексте ИБТ.
//  See Also:
//		opCtxSetProviderSessionParams
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Установка защищённой сессии с Поставщиком Услуги.
IL_FUNC IL_WORD  opApiSetProviderCryptoSession(s_opContext *p_opContext);

//  Description:
//      Выполняет аутентификацию Поставщика Услуги.<p/>
//		Параметры для для аутентификации Поставщика услуги должны быть предустановлены в контексте ИБТ.
//  See Also:
//		opCtxSetProviderAuthData
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Аутентификация Поставщика Услуги.
IL_FUNC IL_WORD  opApiAuthServiceProvider(s_opContext *p_opContext);

//  Description:
//      Выполняет шифрование данных запроса на оказание услуги в рамках установленного защищённого соединения между терминалом и Поставщика Услуги.<p/>
//		Параметы для шифрования данных должны быть предустановлены в контексте ИБТ.
//  See Also:
//		opCtxSetProviderEncrDecrBuf
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Шифрование данных запроса на оказание услуги.
IL_FUNC IL_WORD  opApiEncryptProviderToTerminal(s_opContext *p_opContext);

//  Description:
//      Выполняет расшифрование данных ответа на запрос оказания услуги в рамках установленного защищённого соединения между терминалом и Поставщика Услуги.<p/>
//		Параметы для расшифрования данных должны быть предустановлены в контексте ИБТ.
//  See Also:
//		opCtxSetProviderEncrDecrBuf
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Расшифрование данных ответа на запрос на оказание услуги.
IL_FUNC IL_WORD  opApiDecryptProviderToTerminal(s_opContext *p_opContext);

//  Description:
//      Осуществляет скрытую блокировку ПИН1 и КРП карты УЭК посредством их многократного неправильного предъявления.<p/>
//  See Also:
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Принудительная блокировка карты УЭК.
IL_FUNC IL_WORD  opApiLockCard(s_opContext *p_opContext);

//  Description:
//      Получает хэш-значения СНИЛС карты УЭК.
//  See Also:
//		
//  Arguments:
//      p_opContext		- Указатель на контекст ИБТ.
//		out_pHashBuf	- Указатель на выходной буфер для полученного хэш-значения СНИЛС.
//		out_pHashLen	- Указатель на возвращаемую длину хэш-значения СНИЛС.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение хэш-значения СНИЛС карты УЭК.
IL_FUNC IL_WORD opApiGetHashSnils(s_opContext *p_opContext, IL_BYTE *out_pHashBuf, IL_WORD *out_pHashLen);

//  Description:
//      Проверяет установленную в ридер карту УЭК.
//      Проверка осуществляется посредством селектирования Идентификационного Приложения для установленной в ридер карты. 
//		При 
//  See Also:
//		
//  Arguments:
//      phCrd		- Указатель на описатель карты.
//  Return Value:
//      IL_WORD		- 0 - в ридер установлена карта УЭК, иначе - код ошибки.
//  Summary:
//      Проверка установки в ридер карты УЭК.
IL_FUNC IL_WORD opApiCheckUecCard(IL_CARD_HANDLE* phCrd);

//  Description:
//      Записывает фразу контрольного приветствия на карту.<p/>
//		Перед вызовом функции предварительно необходимо установить в контекст ИБТ строку Win-1251 с записываемой на карту фразой контрольного приветствия. 
//		Фраза контрольного приветствия может быть записана на карту только после верификации гражданина.
//  See Also:
//		opCtxSetPassPhrase
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Запись фразы контрольного приветствия на карту.
IL_FUNC IL_WORD opApiWritePassPhrase(s_opContext *p_opContext);

//  Description:
//		TODO:
//      Получает строку-описатель cгрупированных в шаблоны TLV-элементов данных бинарного блока.
//		Описатели шаблонов размещаются в секции 'PatternDescr' конфигурационного файла терминала 'terminal.ini'.
//		Возвращаемая строка может быть использована при построения иерархических меню для отображения и редактирования размещаемых в блоке документов, например, частных данных держателя карты. 
//  See Also:
//		opApiGetCardBlockDataDescr		
//  Arguments:
//      p_opContext	- Указатель на контекст ИБТ.
//		in_BlockId	- Идентификатор бинарного блока TLV-данных в формате:<p/>
//			<p/>"S-B", где:
//				- S - Идентификатор сектора данных.
//				- B - Идентификатор блока данных.
//		out_PatternDescr - Указатель на буфер для возвращаемой строки-описателя шаблонов. 
//		inout_PatternDescrLen	- Указатель на максимальный размер буфера выходных данных и фактическую длину возвращаемой строки.
//  Return Value:
//      IL_WORD		- Код ошибки.
//  Summary:
//      Получение строки-описателя шаблонов TLV-элементов.
IL_FUNC IL_WORD opApiGetBlockPatternDescr(s_opContext *p_opContext, IL_CHAR *in_BlockId, IL_CHAR *out_PatternDescr, IL_WORD *inout_PatternDescrLen);



#ifdef __cplusplus
}
#endif

#endif//__OP_API_H_