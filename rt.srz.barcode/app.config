<?xml version="1.0"?>

<configuration>
  <configSections>
    <sectionGroup name="userSettings"
                  type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="rt.barcode.insurance.Properties.Settings"
               type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      <section name="st.barcode.insurance.Properties.Settings"
               type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      <section name="BarCodeParser.Properties.Settings"
               type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <userSettings>
    <rt.barcode.insurance.Properties.Settings>
      <setting name="BarcodeNormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string Concat(string FirstName, string LastName, string Patronymic, byte barcode_type){
          return string.Format("{0}|{1}|{2}", FirstName.TrimEnd(), LastName.TrimEnd(), Patronymic.TrimEnd()).PadRight(barcode_type == 1 ? 56 : 68, '\x20');
          }
          public string ToUInt64(string value, int MaxBytes)
          {
          value = string.IsNullOrEmpty(value) ? "0" : value;
          MaxBytes = MaxBytes &gt; 8 ? 8 : MaxBytes &lt; 1 ? 1 : MaxBytes;
          ulong vs = ulong.Parse(value);
          System.Collections.Generic.List&lt;byte&gt; ret_val = new System.Collections.Generic.List&lt;byte&gt;();
          ret_val.AddRange(new byte[]
          {   (byte)(( (ulong)vs &amp; 0xff00000000000000) &gt;&gt; 0x38),
          (byte)((vs &amp; 0x00ff000000000000) &gt;&gt; 0x30),
          (byte)((vs &amp; 0x0000ff0000000000) &gt;&gt; 0x28),
          (byte)((vs &amp; 0x000000ff00000000) &gt;&gt; 0x20),
          (byte)((vs &amp; 0x00000000ff000000) &gt;&gt; 0x18),
          (byte)((vs &amp; 0x0000000000ff0000) &gt;&gt; 0x10),
          (byte)((vs &amp; 0x000000000000ff00) &gt;&gt; 0x08),
          (byte) (vs &amp; 0x00000000000000ff) });
          return Convert.ToBase64String(ret_val.GetRange(8 - MaxBytes, MaxBytes).ToArray());
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="PolicyNumber"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(FirstName, LastName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(LastName, FirstName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn, 6)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato, 3)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="BarcodeDenormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string PadPolicyNumber(string number)
          {
          return number.PadLeft(16, '0');
          }
          public string SplitFLP(string value, int index)
          {
          string[] parts = value.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
          return parts[index].Trim();
          }
          public string ToUInt64(string value)
          {
          byte[] binary = Convert.FromBase64String(value);
          ulong ret_val = 0;
          for (int i = 0; i &lt; binary.Length; i++)
          {
          ret_val &lt;&lt;= i &gt; 0 ? 8 : 0;
          ret_val |= binary[i];
          }
          return ret_val.ToString();
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="user:PadPolicyNumber(PolicyNumber)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="NormalizedBarcode" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString56"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="56"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString68"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="68"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="6"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString56" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString68" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="BarcodeSchema" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString20"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="20"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString28"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="28"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="15"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:unsignedInt"&gt;
          &lt;xs:totalDigits value="8"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString28" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="PolicyXSD2" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="PolicyXSD1" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="15"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:unsignedInt"&gt;
          &lt;xs:totalDigits value="8"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
    </rt.barcode.insurance.Properties.Settings>
    <st.barcode.insurance.Properties.Settings>
      <setting name="BarcodeNormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string Concat(string FirstName, string LastName, string Patronymic, byte barcode_type){
          return string.Format("{0}|{1}|{2}", FirstName.TrimEnd(), LastName.TrimEnd(), Patronymic.TrimEnd()).PadRight(barcode_type == 1 ? 56 : 68, '\x20');
          }
          public string ToUInt64(string value, int MaxBytes)
          {
          value = string.IsNullOrEmpty(value) ? "0" : value;
          MaxBytes = MaxBytes &gt; 8 ? 8 : MaxBytes &lt; 1 ? 1 : MaxBytes;
          ulong vs = ulong.Parse(value);
          System.Collections.Generic.List&lt;byte&gt; ret_val = new System.Collections.Generic.List&lt;byte&gt;();
          ret_val.AddRange(new byte[]
          {   (byte)(( (ulong)vs &amp; 0xff00000000000000) &gt;&gt; 0x38),
          (byte)((vs &amp; 0x00ff000000000000) &gt;&gt; 0x30),
          (byte)((vs &amp; 0x0000ff0000000000) &gt;&gt; 0x28),
          (byte)((vs &amp; 0x000000ff00000000) &gt;&gt; 0x20),
          (byte)((vs &amp; 0x00000000ff000000) &gt;&gt; 0x18),
          (byte)((vs &amp; 0x0000000000ff0000) &gt;&gt; 0x10),
          (byte)((vs &amp; 0x000000000000ff00) &gt;&gt; 0x08),
          (byte) (vs &amp; 0x00000000000000ff) });
          return Convert.ToBase64String(ret_val.GetRange(8 - MaxBytes, MaxBytes).ToArray());
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="PolicyNumber"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(FirstName, LastName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(LastName, FirstName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn, 6)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato, 3)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="BarcodeDenormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string PadPolicyNumber(string number)
          {
          return number.PadLeft(16, '0');
          }
          public string SplitFLP(string value, int index)
          {
          string[] parts = value.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
          return parts[index].Trim();
          }
          public string ToUInt64(string value)
          {
          byte[] binary = Convert.FromBase64String(value);
          ulong ret_val = 0;
          for (int i = 0; i &lt; binary.Length; i++)
          {
          ret_val &lt;&lt;= i &gt; 0 ? 8 : 0;
          ret_val |= binary[i];
          }
          return ret_val.ToString();
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="user:PadPolicyNumber(PolicyNumber)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="NormalizedBarcode" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString56"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="56"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString68"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="68"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="6"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString56" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString68" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="BarcodeSchema" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString20"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="20"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString28"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="28"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="15"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:unsignedInt"&gt;
          &lt;xs:totalDigits value="8"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString28" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="PolicyXSD2" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="PolicyXSD1" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="15"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:unsignedInt"&gt;
          &lt;xs:totalDigits value="8"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:dateTime" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
    </st.barcode.insurance.Properties.Settings>
    <BarCodeParser.Properties.Settings>
      <setting name="BarcodeNormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string Concat(string FirstName, string LastName, string Patronymic, byte barcode_type){
          return string.Format("{0}|{1}|{2}", FirstName.TrimEnd(), LastName.TrimEnd(), Patronymic.TrimEnd()).PadRight(barcode_type == 1 ? 56 : 68, '\x20');
          }
          public string ToUInt64(string value, int MaxBytes)
          {
          value = string.IsNullOrEmpty(value) ? "0" : value;
          MaxBytes = MaxBytes &gt; 8 ? 8 : MaxBytes &lt; 1 ? 1 : MaxBytes;
          ulong vs = ulong.Parse(value);
          System.Collections.Generic.List&lt;byte&gt; ret_val = new System.Collections.Generic.List&lt;byte&gt;();
          ret_val.AddRange(new byte[]
          {   (byte)(( (ulong)vs &amp; 0xff00000000000000) &gt;&gt; 0x38),
          (byte)((vs &amp; 0x00ff000000000000) &gt;&gt; 0x30),
          (byte)((vs &amp; 0x0000ff0000000000) &gt;&gt; 0x28),
          (byte)((vs &amp; 0x000000ff00000000) &gt;&gt; 0x20),
          (byte)((vs &amp; 0x00000000ff000000) &gt;&gt; 0x18),
          (byte)((vs &amp; 0x0000000000ff0000) &gt;&gt; 0x10),
          (byte)((vs &amp; 0x000000000000ff00) &gt;&gt; 0x08),
          (byte) (vs &amp; 0x00000000000000ff) });
          return Convert.ToBase64String(ret_val.GetRange(8 - MaxBytes, MaxBytes).ToArray());
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="PolicyNumber"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(FirstName, LastName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FLP"&gt;
          &lt;xsl:value-of select="user:Concat(LastName, FirstName, Patronymic, BarcodeType)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn, 6)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato, 3)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="BarcodeDenormilizer" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
          xmlns:user="urn:user"&gt;
          &lt;msxsl:script language="C#" implements-prefix="user"&gt;
          &lt;![CDATA[
          public string PadPolicyNumber(string number)
          {
          return number.PadLeft(16, '0');
          }
          public string SplitFLP(string value, int index)
          {
          string[] parts = value.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
          return parts[index].Trim();
          }
          public string ToUInt64(string value)
          {
          byte[] binary = Convert.FromBase64String(value);
          ulong ret_val = 0;
          for (int i = 0; i &lt; binary.Length; i++)
          {
          ret_val &lt;&lt;= i &gt; 0 ? 8 : 0;
          ret_val |= binary[i];
          }
          return ret_val.ToString();
          }
          ]]&gt;
          &lt;/msxsl:script&gt;
          &lt;xsl:output method="xml" indent="yes"/&gt;
          &lt;xsl:template match="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeData"&gt;
          &lt;xsl:element name="BarcodeType"&gt;
          &lt;xsl:value-of select="BarcodeType"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="PolicyNumber"&gt;
          &lt;xsl:value-of select="user:PadPolicyNumber(PolicyNumber)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:if test="BarcodeType=2"&gt;
          &lt;xsl:element name="FirstName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 1)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="LastName"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 0)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Patronymic"&gt;
          &lt;xsl:value-of select="user:SplitFLP(FLP, 2)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="Sex"&gt;
          &lt;xsl:value-of select="Sex"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="BirthDate"&gt;
          &lt;xsl:value-of select="BirthDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="ExpireDate"&gt;
          &lt;xsl:value-of select="ExpireDate"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:if test="BarcodeType=1"&gt;
          &lt;xsl:element name="Ogrn"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Ogrn)"/&gt;
          &lt;/xsl:element&gt;
          &lt;xsl:element name="Okato"&gt;
          &lt;xsl:value-of select="user:ToUInt64(Okato)"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:if&gt;
          &lt;xsl:element name="EDS"&gt;
          &lt;xsl:value-of select="EDS"/&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:element&gt;
          &lt;/xsl:template&gt;
          &lt;/xsl:stylesheet&gt;
        </value>
      </setting>
      <setting name="NormalizedBarcode" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString56"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="56"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString68"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="68"/&gt;
          &lt;xs:minLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="6"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:base64Binary"&gt;
          &lt;xs:minLength value="1"/&gt;
          &lt;xs:maxLength value="3"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString56" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FLP" type="barcodeString68" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
      <setting name="BarcodeSchema" serializeAs="String">
        <value>
          &lt;?xml version="1.0" encoding="utf-8"?&gt;
          &lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
          &lt;xs:simpleType name="barcodeString24"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="24"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString20"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="20"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString28"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="28"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodeString16"&gt;
          &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:maxLength value="16"/&gt;
          &lt;xs:minLength value="0"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodePolicy"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="20"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOgrn"&gt;
          &lt;xs:restriction base="xs:unsignedLong"&gt;
          &lt;xs:totalDigits value="15"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:simpleType name="barcodOkato"&gt;
          &lt;xs:restriction base="xs:unsignedInt"&gt;
          &lt;xs:totalDigits value="8"/&gt;
          &lt;/xs:restriction&gt;
          &lt;/xs:simpleType&gt;
          &lt;xs:element name="BarcodeData"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString24" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString16" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="BarcodeData_V2"&gt;
          &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
          &lt;xs:element name="BarcodeType" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="PolicyNumber" type="barcodePolicy" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="FirstName" type="barcodeString28" minOccurs="1" maxOccurs="1"/&gt;
          &lt;xs:element name="LastName" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Patronymic" type="barcodeString20" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Sex" type="xs:unsignedByte" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="BirthDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="ExpireDate" type="xs:date" minOccurs="1" maxOccurs="1" /&gt;
          &lt;xs:element name="Ogrn" type="barcodOgrn" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="Okato" type="barcodOkato" minOccurs="0" maxOccurs="1" /&gt;
          &lt;xs:element name="EDS" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/&gt;
          &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;/xs:schema&gt;
        </value>
      </setting>
    </BarCodeParser.Properties.Settings>
  </userSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
</configuration>