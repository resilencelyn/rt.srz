//------------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using rt.core.business.nhibernate;
using rt.fias.model.fias;

namespace rt.fias.business.manager
{
    public partial interface IAObjectManager : IManagerBase<rt.fias.model.fias.AObject, System.Guid>
    {
		// Get Methods
		IList<AObject> GetByACTSTATUS(System.Int32 actualStatus);
		IList<AObject> GetByCENTSTATUS(System.Int32 centerStatus);
		IList<AObject> GetByCURRSTATUS(System.Int32 currentStatus);
		IList<AObject> GetByNEXTID(System.Guid aObjectMember1);
		IList<AObject> GetByPREVID(System.Guid aObjectMember2);
		IList<AObject> GetByOPERSTATUS(System.Int32 operationStatus);
    
    }

    partial class AObjectManager : ManagerBase<rt.fias.model.fias.AObject, System.Guid>, IAObjectManager
    {
        #region Get Methods

		
		public IList<AObject> GetByACTSTATUS(System.Int32 actualStatus)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria actualStatusCriteria = criteria.CreateCriteria("ActualStatus");
            actualStatusCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", actualStatus));
			
			return criteria.List<AObject>();
        }
		
		public IList<AObject> GetByCENTSTATUS(System.Int32 centerStatus)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria centerStatusCriteria = criteria.CreateCriteria("CenterStatus");
            centerStatusCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", centerStatus));
			
			return criteria.List<AObject>();
        }
		
		public IList<AObject> GetByCURRSTATUS(System.Int32 currentStatus)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria currentStatusCriteria = criteria.CreateCriteria("CurrentStatus");
            currentStatusCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", currentStatus));
			
			return criteria.List<AObject>();
        }
		
		public IList<AObject> GetByNEXTID(System.Guid aObjectMember1)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria aObjectMember1Criteria = criteria.CreateCriteria("AObjectMember1");
            aObjectMember1Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", aObjectMember1));
			
			return criteria.List<AObject>();
        }
		
		public IList<AObject> GetByPREVID(System.Guid aObjectMember2)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria aObjectMember2Criteria = criteria.CreateCriteria("AObjectMember2");
            aObjectMember2Criteria.Add(NHibernate.Criterion.Expression.Eq("Id", aObjectMember2));
			
			return criteria.List<AObject>();
        }
		
		public IList<AObject> GetByOPERSTATUS(System.Int32 operationStatus)
        {
            ICriteria criteria = Session.GetISession().CreateCriteria(typeof(AObject));
			
			
			ICriteria operationStatusCriteria = criteria.CreateCriteria("OperationStatus");
            operationStatusCriteria.Add(NHibernate.Criterion.Expression.Eq("Id", operationStatus));
			
			return criteria.List<AObject>();
        }
		
		#endregion
    }
}